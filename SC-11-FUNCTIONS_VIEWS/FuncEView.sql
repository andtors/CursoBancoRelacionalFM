/* NOME, EMAIL, NUMERO, ESTADO */
-- ALGUNS REGISTROS APARECEM NOM NULL
SELECT C.NOME, C.EMAIL, E.ESTADO, T.NUMERO
FROM CLIENTE C
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE

SELECT C.NOME, 
       IFNULL(C.EMAIL, 'Não possui') AS EMAIL,
       E.ESTADO,
       T.NUMERO
FROM CLIENTE C
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE

/* VIEW */
SELECT  C.NOME, 
        C.SEXO, 
        C.EMAIL, 
        T.TIPO, 
        T.NUMERO, 
        E.BAIRRO, 
        E.CIDADE, 
        E.ESTADO
FROM CLIENTE C
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE;

CREATE VIEW V_RELATORIO AS 
SELECT  C.NOME, 
        C.SEXO, 
        IFNULL(C.EMAIL, 'Não possui') AS "E-MAIL",
        T.TIPO, 
        T.NUMERO, 
        E.BAIRRO, 
        E.CIDADE, 
        E.ESTADO
FROM CLIENTE C
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM RELATORIO;

SHOW TABLES; -- APARACE A VIEW CRIADA

/* APAGANDO UMA VIEW */

DROP VIEW RELATORIO;

SELECT NOME, NUMERO, ESTADO
FROM V_RELATORIO;

/* UPDATE, INSERT E DELETE - DML */

INSERT INTO V_RELATORIO VALUES (
    'ANDREIA', 'F','ANDREIA@UOL.COM.BR', 'CEL', '51363286', 'CENTRO', 'VITORIA', 'ES'
);
-- NÃO É POSSIVEL FAZER INSERT NEM DELETE  COM A VIEW QUANDO HÁ JOIN
-- PORÉM É PERMITIDO FAZER UPDATES EM VIEW COM JOINS

CREATE TABLE JOGADORES (
    IDJOGADOR INT,
    NOME VARCHAR(30),
    ESTADO CHAR(2)
);

INSERT INTO JOGADORES VALUES (1, 'GUERREIRO', 'RS');
INSERT INTO JOGADORES VALUES (2, 'GABIGOL', 'RJ');
INSERT INTO JOGADORES VALUES (3, 'GANSO', 'RJ');
INSERT INTO JOGADORES VALUES (4, 'NENE', 'RJ');
INSERT INTO JOGADORES VALUES (5, 'LOVE', 'SP');

CREATE VIEW V_JOGADORES AS 
SELECT NOME, ESTADO
FROM JOGADORES

DELETE FROM V_JOGADORES
WHERE NOME = 'GUERREIRO';

INSERT INTO V_JOGADORES VALUES ('GUERREIRO', 'RS');

-- QUANDO NÃO HÁ JOIN É POSSIVEL INSERIR E DELETAR REGISTROS NA VIEW

/* ORDER BY */

CREATE TABLE ALUNOS (
    NUMERO INT,
    NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES (1, 'JOAO');
INSERT INTO ALUNOS VALUES (1, 'MARIA');
INSERT INTO ALUNOS VALUES (2, 'ZOE');
INSERT INTO ALUNOS VALUES (2, 'ANDRE');
INSERT INTO ALUNOS VALUES (3, 'CLARA');
INSERT INTO ALUNOS VALUES (1, 'CLARA');
INSERT INTO ALUNOS VALUES (4, 'MAFRA');
INSERT INTO ALUNOS VALUES (5, 'JANAINA');
INSERT INTO ALUNOS VALUES (1, 'JANAINA');
INSERT INTO ALUNOS VALUES (3, 'MARCELO');
INSERT INTO ALUNOS VALUES (4, 'GIOVANI');
INSERT INTO ALUNOS VALUES (5, 'ANTONIO');
INSERT INTO ALUNOS VALUES (6, 'ANA');
INSERT INTO ALUNOS VALUES (6, 'VIVIANE');

SELECT * FROM ALUNOS
ORDER BY NUMERO;

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENANDO POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 1, 2;

/* MESCLANDO ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS
ORDER BY 1, 2;

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;

/* ORDER BY DESC / ASC */
SELECT * FROM ALUNOS
ORDER BY 1, 2;

SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;

SELECT * FROM ALUNOS
ORDER BY 1, 2 DESC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC;

/* ORDENANDO COM JOINS */
SELECT  C.NOME, 
        C.SEXO, 
        IFNULL(C.EMAIL, 'Não possui') AS "E-MAIL",
        T.TIPO, 
        T.NUMERO, 
        E.BAIRRO, 
        E.CIDADE, 
        E.ESTADO
FROM CLIENTE C
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE
    ORDER BY 1;

SELECT * FROM V_RELATORIO 
ORDER BY 1;